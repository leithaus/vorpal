<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.biosimilarity.lift</groupId>
  <artifactId>vorpal</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>vorpal Project</name>
  <inceptionYear>2010</inceptionYear>
  <properties>
    <scala.version>2.8.0</scala.version>
    <!-- Common plugin settings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
    <!-- vscaladoc settings -->
    <maven.scaladoc.vscaladocVersion>1.2-SNAPSHOT</maven.scaladoc.vscaladocVersion>
    <vscaladoc.links.liftweb.pathsufix>scaladocs/</vscaladoc.links.liftweb.pathsufix>
    <vscaladoc.links.liftweb.baseurl>http://scala-tools.org/mvnsites-snapshots/liftweb</vscaladoc.links.liftweb.baseurl>
  </properties>

  <repositories>
    <repository>
      <id>scala-tools.releases</id>
      <name>Scala-Tools Dependencies Repository for Releases</name>
      <url>http://scala-tools.org/repo-releases</url>
    </repository>
    <repository>
      <id>scala-tools.snapshots</id>
      <name>Scala-Tools Dependencies Repository for Snapshots</name>
      <url>http://scala-tools.org/repo-snapshots</url>
      <snapshots/>
    </repository>
    <repository>
      <id>biosim</id>
      <url>http://biosimrepomirror.googlecode.com/svn/trunk</url>
    </repository>     
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>scala-tools.releases</id>
      <name>Scala-Tools Plugins Repository for Releases</name>
      <url>http://scala-tools.org/repo-releases</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>net.liftweb</groupId>
      <artifactId>lift-mapper_2.8.0</artifactId>
      <version>2.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.2.138</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-tools.testing</groupId>
      <artifactId>specs_2.8.0</artifactId>
      <version>1.6.5-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
      <version>[6.1.6,7.0)</version>
      <scope>test</scope>
    </dependency>
    <!-- for LiftConsole -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.1</version>
    </dependency>

    <!-- BNFC dependencies -->
    <dependency>
    	<groupId>jlex</groupId>
    	<artifactId>JLex-local</artifactId>
    	<version>local</version>
    </dependency>
    <dependency>
      <groupId>cup</groupId>
      <artifactId>java-cup-11a</artifactId>
      <version>local</version>
    </dependency>
    <dependency>
      <groupId>cup</groupId>
      <artifactId>java-cup-11a-runtime</artifactId>
      <version>local</version>
    </dependency>    
    
    <dependency>
      <groupId>com.rabbitmq</groupId>
      <artifactId>rabbitmq-client</artifactId>
      <version>1.3.0</version>
    </dependency>

    <dependency>
      <groupId>xpp3</groupId>
      <artifactId>xpp3_min</artifactId>
      <version>1.1.4c</version>
    </dependency> 
    <dependency>
      <groupId>xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.3.1</version>
    </dependency> 
    <dependency>
      <groupId>com.eaio.eaio</groupId>
      <artifactId>uuid</artifactId>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.scalaxb</groupId>
      <artifactId>scalaxb</artifactId>
      <version>local-update</version>
    </dependency>

    <dependency>
      <groupId>org.squeryl</groupId>
      <!-- <artifactId>squeryl_2.8.0.RC2-0.9.4beta2</artifactId> -->
      <artifactId>squeryl_2.8.0.RC6</artifactId>
      <!-- <version>squeryl_2.8.0.RC2</version> -->
      <version>0.9.4beta6</version>
    </dependency>
    
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4.1</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>3.3.1.GA</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <version>3.4.0.GA</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>3.4.0.GA</version>
      <exclusions>
	<exclusion>
	  <groupId>javax.transaction</groupId>
	  <artifactId>jta</artifactId>
	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>geronimo-spec</groupId>
      <artifactId>geronimo-spec-jta</artifactId>
      <version>1.0.1B-rc4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.6</version>
    </dependency> 
    
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <!-- plugin -->
	<!-- groupId>org.apache.maven.plugins</groupId -->
	<!-- artifactId>maven-compiler-plugin</artifactId -->
	<!-- configuration -->
	  <!-- source>1.5</source -->
	  <!-- target>1.5</target -->
	<!-- /configuration -->
      <!-- /plugin -->
      <plugin>
	<groupId>org.scala-tools</groupId>
	<artifactId>maven-scala-plugin</artifactId>
	<version>2.14</version>
	<configuration>
	  <charset>${project.build.sourceEncoding}</charset>
	  <jvmArgs>
	    <jvmArg>-Xmx1024m</jvmArg>
	    <jvmArg>-DpackageLinkDefs=file://${project.build.directory}/packageLinkDefs.properties</jvmArg>
	  </jvmArgs>
	  <args>
	    <arg>-P:continuations:enable</arg>
	  </args>
	  <displayCmd>true</displayCmd>
	  <launchers>
	    <launcher>
	      <id>Desdemona</id>
	      <mainClass>com.biosimilarity.lift.lib.othello.theDesdemona</mainClass>
	      <!-- args are optional -->
	      <args>
		<arg>--projectName</arg>
		<arg>${artifactId}</arg>
		<arg>--groupId</arg>
		<arg>${groupId}</arg>
		<arg>--storeName</arg>
		<arg>${artifactId}_development</arg>
		<arg>--srcLocation</arg>
		<arg>${basedir}/target/generated-sources</arg>
	      </args>
	      <!-- jvmArgs are optional -->
	      <!-- <jvmArgs> -->
<!-- 		<jvmArg>-Xmx128m</jvmArg> -->
<!-- 		<jvmArg>-Djava.library.path=...</jvmArg> -->
<!-- 	      </jvmArgs> -->
	    </launcher>
	    <!-- you could define other launcher -->
	  </launchers>
	  <compilerPlugins>
	    <compilerPlugin>	      
	      <groupId>org.scala-lang.plugins</groupId>
	      <artifactId>continuations</artifactId>
	      <version>${scala.version}</version>
	    </compilerPlugin>
	  </compilerPlugins>	  
	</configuration>
	<executions>
	  <execution>
	    <goals>
	      <goal>compile</goal>
	      <goal>testCompile</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-resources-plugin</artifactId>
	<version>2.4.2</version>
	<executions>
	  <execution>
	    <id>default-copy-resources</id>
	    <phase>process-resources</phase>
	    <goals>
	      <goal>copy-resources</goal>
	    </goals>
	    <configuration>
	      <overwrite>true</overwrite>
	      <outputDirectory>${project.build.directory}</outputDirectory>
	      <resources>
		<resource>
		  <directory>${project.basedir}/src</directory>
		  <includes>
		    <include>packageLinkDefs.properties</include>
		  </includes>
		  <filtering>true</filtering>
		</resource>
	      </resources>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.24</version>
        <configuration>
          <contextPath>/</contextPath>
          <scanIntervalSeconds>5</scanIntervalSeconds>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.sf.alchim</groupId>
        <artifactId>yuicompressor-maven-plugin</artifactId>
        <version>0.7.1</version>
        <executions>
          <execution>
            <goals>
              <goal>compress</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <nosuffix>true</nosuffix>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-idea-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <downloadSources>true</downloadSources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <additionalProjectnatures>
            <projectnature>ch.epfl.lamp.sdt.core.scalanature</projectnature>
          </additionalProjectnatures>
          <additionalBuildcommands>
            <buildcommand>ch.epfl.lamp.sdt.core.scalabuilder</buildcommand>
          </additionalBuildcommands>
          <classpathContainers>
            <classpathContainer>ch.epfl.lamp.sdt.launching.SCALA_CONTAINER</classpathContainer>
            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
          </classpathContainers>
        </configuration>
      </plugin>
      <!-- If you want to regenerate the parser from the .cf file,
	   uncomment this plugin -->

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-antrun-plugin</artifactId>
	<executions>
	  <execution>
	    <id>bnfc-generation</id>
	    <phase>generate-sources</phase>
	    <configuration>
	      <tasks>
		<property name="target.dir" value="${basedir}/target"/>
		<property name="scala.dir" value="${basedir}/src/main/scala"/>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
		<property name="compile_classpath"
			  refid="maven.compile.classpath"/>

                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-generate"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <execution>
	    <id>bnfc-processing</id>
	    <phase>process-sources</phase>
	    <configuration>
	      <tasks>
		<property name="target.dir" value="${basedir}/target"/>
		<property name="scala.dir" value="${basedir}/src/main/scala"/>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-process"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <!-- <execution> -->
<!-- 	    <id>bnfc-persistence</id> -->
<!-- 	    <phase>process-classes</phase> -->
<!-- 	    <configuration> -->
<!-- 	      <tasks> -->
<!-- 		<property name="base.dir" value="${basedir}"/> -->
<!-- 		<property name="target.dir" value="${basedir}/target"/> -->
<!-- 		<property name="scala.dir" value="${basedir}/src/main/scala"/> -->
<!-- 		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/> -->
<!-- 		<property name="bnfc.package" value="${groupId}"/> -->
<!-- 		<property name="bnfc.artifact" value="${artifactId}"/> -->
<!-- 		<property name="compile_classpath" -->
<!-- 			  refid="maven.compile.classpath"/> -->
<!--                 <ant antfile="${basedir}/src/main/bnfc/build.xml"> -->
<!--                   <target name="bnfc-generate-persistence"/> -->
<!--                 </ant> -->
<!--               </tasks> -->
<!--             </configuration> -->
<!--             <goals> -->
<!--               <goal>run</goal> -->
<!--             </goals> -->
<!--           </execution> -->
	  <execution>
	    <id>bnfc-doc</id>
	    <phase>generate-resources</phase>
	    <configuration>
	      <tasks>
		<property name="base.dir" value="${basedir}"/>
		<property name="target.dir" value="${basedir}/target"/>
		<property name="scala.dir" value="${basedir}/src/main/scala"/>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
		<property name="compile_classpath"
			  refid="maven.compile.classpath"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-generate-doc-xhtml"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <execution>
	    <id>bnfc-deploy-doc</id>
	    <phase>process-resources</phase>
	    <configuration>
	      <tasks>
		<property name="base.dir"
			  value="${basedir}"/>
		<property name="target.dir"
			  value="${basedir}/target"/>
		<property name="scala.dir"
			  value="${basedir}/src/main/scala"/>
		<property name="scala.dir"
			  value="${basedir}/src/main/webapp"/>
		<property name="bnfc.dir"
			  value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package"
			  value="${groupId}"/>
		<property name="bnfc.artifact"
			  value="${artifactId}"/>
		<property name="compile_classpath"
			  refid="maven.compile.classpath"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-deploy-doc-xhtml"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <execution>
	    <id>bnfc-cleansing</id>
	    <phase>clean</phase>
	    <configuration>
	      <tasks>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-clean"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- end comment section -->

      <!-- Compiler plugin enforces Java 1.6 compatibility and controls execution of annotation processors -->
      <plugin>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>2.3.1</version>
	<configuration>
	  <source>1.6</source>
	  <target>1.6</target>
	  <compilerArgument>-proc:none</compilerArgument>
	</configuration>
	<executions>
	  <execution>
	    <id>run-annotation-processors-only</id>
	    <phase>process-sources</phase>
	    <configuration>
	      <compilerArgument>-proc:only</compilerArgument>
	      <!-- If your app has multiple packages, use this include filter to
		   execute the processor only on the package containing your entities -->
	      <!--
		  <includes>
		  <include>**/model/*.java</include>
		  </includes>
	      -->
	    </configuration>
	    <goals>
	      <goal>compile</goal>
	    </goals>
	  </execution>
	</executions>  
      </plugin>         
      <!-- Build helper plugin adds the sources generated by the JPA 2 annotation processor to the compile path -->
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>build-helper-maven-plugin</artifactId>
	<version>1.5</version>
	<executions>      
	  <execution> 
	    <phase>process-sources</phase>
	    <configuration>
	      <sources>
		<source>${project.build.directory}/generated-sources/annotations</source>
	      </sources>
	    </configuration>
	    <goals>
	      <goal>add-source</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>

      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>hibernate3-maven-plugin</artifactId>
	<!-- version>2.0-alpha-2</version -->
	<version>2.2</version>
	<executions>
	  <execution>
	    <phase>process-classes</phase>
	    <goals>
	      <goal>hbm2ddl</goal>
	    </goals>
	  </execution>
	</executions>
	<configuration>
	  <configurationfile>hibernate.cfg.xml</configurationfile>
	  <persistenceunit>vorpal</persistenceunit>
	  <propertyfile>vorpal.db.properties</propertyfile>
	  <components>
	    <component>
	      <name>hbm2ddl</name>
	      <implementation>annotationconfiguration</implementation>
	    </component>
	  </components>
	  <componentProperties>
	    <implementation>jpaconfiguration</implementation>
	    <persistenceunit>vorpal</persistenceunit>
	    <outputfilename>schema.ddl</outputfilename>
	    <drop>false</drop>
	    <create>true</create>
	    <export>false</export>
	    <format>true</format>
	  </componentProperties>
	</configuration>
      </plugin>
    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>sql-maven-plugin</artifactId>
      <version>1.1</version>

      <dependencies>
	<!-- specify the dependent jdbc driver here -->
	<dependency>
	  <groupId>mysql</groupId>
	  <artifactId>mysql-connector-java</artifactId>
	  <version>5.1.6</version>
	</dependency>
      </dependencies>

      <!-- common configuration shared by all executions -->
      <configuration>
	<driver>com.mysql.jdbc.Driver</driver>
	<url>jdbc:mysql://localhost/vorpal_bootstrap</url>
	<username>root</username>
	<password>phr3dnj0rg3</password>
      </configuration>

      <executions>
	<execution>
	  <id>mysql-drop-db</id>
	  <phase>package</phase>
	  <goals>
	    <goal>execute</goal>
	  </goals>
	  <configuration>
	    <autocommit>true</autocommit>
	    <sqlCommand>drop database ${artifactId}_production</sqlCommand>
	    <onError>continue</onError>
	  </configuration>
	</execution>
	<execution>
	  <id>mysql-create-db</id>
	  <phase>package</phase>
	  <goals>
	    <goal>execute</goal>
	  </goals>
	  <configuration>
	    <autocommit>true</autocommit>
	    <sqlCommand>create database ${artifactId}_production</sqlCommand>
	  </configuration>
	</execution>
	<execution>
	  <id>mysql-create-schema</id>
	  <phase>package</phase>
	  <goals>
	    <goal>execute</goal>
	  </goals>
	  <configuration>
	    <autocommit>true</autocommit>
	    <srcFiles>
	      <srcFile>${basedir}/target/hibernate3/sql/schema.ddl</srcFile>
	    </srcFiles>
	  </configuration>
	</execution>
      </executions> 
    </plugin>

    </plugins>

  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.14</version>
        <configuration>
          <charset>${project.build.sourceEncoding}</charset>
          <jvmArgs>
            <jvmArg>-Xmx1024m</jvmArg>
            <jvmArg>-DpackageLinkDefs=file://${project.build.directory}/packageLinkDefs.properties</jvmArg>
          </jvmArgs>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
